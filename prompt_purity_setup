# Purity Theme
#
#This is a zsh theme that merges pure theme into agnoster.

### Segment drawing
# A few utility functions to make it easy and re-usable to draw segmented prompts

CURRENT_BG='NONE'
PRIMARY_FG=black

# Characters
SEGMENT_SEPARATOR="\ue0b0"
PLUSMINUS="\u00b1"
BRANCH="\ue0a0"
DETACHED="\u27a6"
CROSS="\u2718"
LIGHTNING="\u26a1"
GEAR="\u2699"

prompt_purity_human_time() {
    local tmp=$1
        local days=$(( tmp / 60 / 60 / 24 ))
        local hours=$(( tmp / 60 / 60 % 24 ))
        local minutes=$(( tmp / 60 % 60 ))
        local seconds=$(( tmp % 60 ))
        (( $days > 0 )) && echo -n "${days}d "
        (( $hours > 0 )) && echo -n "${hours}h "
        (( $minutes > 0 )) && echo -n "${minutes}m "
        echo "${seconds}s"
}

prompt_purity_cmd_exec_time() {
    local stop=$EPOCHSECONDS
        local start=${cmd_timestamp:-$stop}
    integer elapsed=$stop-$start
        (($elapsed > ${AGNOSTER_CMD_MAX_EXEC_TIME:=5})) && prompt_purity_human_time $elapsed
}

prompt_purity_preexec() {
	cmd_timestamp=$EPOCHSECONDS

	# shows the current dir and executed command in the title when a process is active
#	print -Pn "\e]0;"
#	echo -nE "$PWD:t: $2"
#	print -Pn "\a"
}

# string length ignoring ansi escapes
prompt_purity_string_length() {
	echo ${#${(S%%)1//(\%([KF1]|)\{*\}|\%[Bbkf])}}
}

# Begin a segment
# Takes two arguments, background and foreground. Both can be omitted,
# rendering default background/foreground.
prompt_segment() {
  local bg fg
  [[ -n $1 ]] && bg="%K{$1}" || bg="%k"
  [[ -n $2 ]] && fg="%F{$2}" || fg="%f"
  if [[ $CURRENT_BG != 'NONE' && $1 != $CURRENT_BG ]]; then
    print -n "%{$bg%F{$CURRENT_BG}%}$SEGMENT_SEPARATOR%{$fg%}"
  else
    print -n "%{$bg%}%{$fg%}"
  fi
  CURRENT_BG=$1
  [[ -n $3 ]] && print -n $3
}

# End the prompt, closing any open segments
prompt_end() {
  if [[ -n $CURRENT_BG ]]; then
    print -n "%{%k%F{$CURRENT_BG}%}$SEGMENT_SEPARATOR"
  else
    print -n "%{%k%}"
  fi
  print -n "%{%f%}"
  CURRENT_BG=''
}

### Prompt components
# Each component will draw itself, and hide itself if no information needs to be shown

# Context: user@hostname (who am I and where am I)
#prompt_context() {
#  local user=`whoami`
#
#  if [[ "$user" != "$DEFAULT_USER" || -n "$SSH_CONNECTION" ]]; then
#    prompt_segment $PRIMARY_FG default " %(!.%{%F{yellow}%}.)$user@%m "
#  fi
#}

# Git: branch/detached head, dirty status
prompt_git() {
  local color ref
  is_dirty() {
    test -n "$(git status --porcelain --ignore-submodules)"
  }
  ref="$vcs_info_msg_0_"
  if [[ -n "$ref" ]]; then
    if is_dirty; then
      color=yellow
      ref="${ref} $PLUSMINUS"
    else
      color=green
      ref="${ref} "
    fi
    if [[ "${ref/.../}" == "$ref" ]]; then
      ref="$BRANCH $ref"
    else
      ref="$DETACHED ${ref/.../}"
    fi
    prompt_segment $color $PRIMARY_FG
    print -Pn " $ref"
  fi
}

# Dir: current working directory
prompt_dir() {
# prompt_segment yellow $PRIMARY_FG ' %~ '
  prompt_segment $PRIMARY_FG default " %(!.%{%F{yellow}%}.)%~ "
}

# Status:
# - was there an error
# - am I root
# - are there background jobs?
prompt_status() {
  local symbols
  symbols=()
  [[ $RETVAL -ne 0 ]] && symbols+="%{%F{red}%}$CROSS"
  [[ $UID -eq 0 ]] && symbols+="%{%F{yellow}%}$LIGHTNING"
  [[ $(jobs -l | wc -l) -gt 0 ]] && symbols+="%{%F{cyan}%}$GEAR"

  [[ -n "$symbols" ]] && prompt_segment $PRIMARY_FG default " $symbols "
}

## Main prompt
prompt_purity_main() {
  RETVAL=$?
  CURRENT_BG='NONE'
  prompt_status
#  prompt_context
  prompt_dir
  prompt_git
  prompt_end
}

prompt_purity_precmd() {
  local prompt_purity_preprompt="\n%F{blue}`prompt_purity_cmd_exec_time`%f"
  print -P $prompt_purity_preprompt
  # reset value since `preexec` isn't always triggered
  unset cmd_timestamp
  vcs_info
  PROMPT='%{%f%b%k%}$(prompt_purity_main) '
}

prompt_purity_setup() {

  zmodload zsh/datetime
  autoload -Uz add-zsh-hook
  autoload -Uz vcs_info
  export PROMPT_EOL_MARK=''

  prompt_opts=(cr subst percent)

  add-zsh-hook preexec prompt_purity_preexec
  add-zsh-hook precmd prompt_purity_precmd
  zstyle ':vcs_info:*' enable git
  zstyle ':vcs_info:*' check-for-changes false
  zstyle ':vcs_info:git*' formats '%b'
  zstyle ':vcs_info:git*' actionformats '%b (%a)'
}

prompt_purity_setup "$@"
